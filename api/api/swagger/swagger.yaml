swagger: "2.0"
info:
  version: "0.0.1"
  title: azviewer API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https

# JSON Web Token を使った認証
# https://github.com/miguelduarte42/swagger-jwt-example/blob/master/api/swagger/swagger.yaml
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz  
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  # JWT
  /login/{role}:
    x-swagger-router-controller: auth
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
          enum: 
            - "user"
            - "admin"
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/AuthError"

  /people:
    # binds a127 app logic to a route
    x-swagger-router-controller: person
    get:
      # used as the method name of the controller
      operationId: listPeople
      summary: 人物一覧
      # TODO 記述変更
      description: |
        指定された条件で人物一覧を返却する。
      parameters:
        - name: familyName
          in: query
          description: 検索キーワード 人物：姓
          required: false
          type: string
        - name: givenName
          in: query
          description: 検索キーワード 人物：名
          required: false
          type: string
        - name: index
          in: query
          description: 50音での姓の絞り込み
          required: false
          type: string
          minLength: 1
          maxLength: 1
        - name: embed
          in: query
          description: 埋め込みたい関連データ名
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 10
        - name: page
          in: query
          description: ページ数
          required: false
          type: integer
          format: int32
          minimum: 1
          default: 1
        - name: q
          in: query
          description: 検索キーワード 人物：キーワード
          required: false
          type: string
      tags:
        - People
      responses:
        200:
          description: An array of people
          headers:
             x-next:
               type: string
               description: A link to the next page of responses
          schema:
            type: array
            items:
              $ref: "#/definitions/Person"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /people/{personId}:
    x-swagger-router-controller: person
    get:
      summary: Info for a specific person
      operationId: showPersonById
      tags:
        - People
      parameters:
        - name: personId
          in: path
          required: true
          description: 人物ID
          type: integer
          format: int64
        - name: embed
          in: query
          description: 埋め込みたい関連データ名
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: "#/definitions/Person"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /works:
    # binds a127 app logic to a route
    x-swagger-router-controller: work
    get:
      # used as the method name of the controller
      operationId: listWorks
      summary: 作品一覧
      # TODO 記述変更
      description: |
        指定された条件で作品一覧を返却する。
      # used as the method name of the controller
      parameters:
        - name: title
          in: query
          description: 検索キーワード 作品名
          required: false
          type: string
        - name: personId
          in: query
          description: 検索キーワード 人物ID
          required: false
          type: integer
          format: int64
        - name: index
          in: query
          description: 50音での作品名の絞り込み
          required: false
          type: string
          minLength: 1
          maxLength: 1
        - name: embed
          in: query
          description: 埋め込みたい関連データ名
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 10
        - name: page
          in: query
          description: ページ数
          required: false
          type: integer
          format: int32
          minimum: 1
          default: 1
        - name: q
          in: query
          description: 検索キーワード 作品：キーワード
          required: false
          type: string
      tags:
        - Work
      responses:
        200:
          description: An array of works
          headers:
             x-next:
               type: string
               description: A link to the next page of responses
          schema:
            type: array
            items:
              $ref: "#/definitions/Work"
              # $ref: "#/definitions/WorkResponse"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /works/{workId}:
    x-swagger-router-controller: work
    get:
      summary: Info for a specific works
      operationId: showWorkById
      tags:
        - Work
      parameters:
        - name: workId
          in: path
          required: true
          description: 作品ID
          type: integer
          format: int64
        - name: embed
          in: query
          description: 埋め込みたい関連データ名
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: "#/definitions/Work"
            # $ref: "#/definitions/WorkResponse"
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /favorites:
    # binds a127 app logic to a route
    x-swagger-router-controller: favorite
    get:
      # used as the method name of the controller
      operationId: listFavorites
      summary: お気に入り一覧
      description: |
        指定された条件でお気に入り一覧を返却する。
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: userId
          in: query
          required: false
          description: ユーザID
          type: string
        - name: embed
          in: query
          description: 埋め込みたい関連データ名
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 10
        - name: page
          in: query
          description: ページ数
          required: false
          type: integer
          format: int32
          minimum: 1
          default: 1
      tags:
        - Favorite
      responses:
        200:
          description: An array of favorites
          headers:
             x-next:
               type: string
               description: A link to the next page of responses
          schema:
            type: array
            items:
              $ref: "#/definitions/Favorite"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      operationId: addFavorite
      summary: お気に入り追加
      description: |
        お気に入りを追加する。
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: body
          in: body
          description: お気に入り追加用パラメータ
          required: true
          schema:
            properties:
              workId:
                type: integer
                format: int64
                description: 作品ID
      tags:
        - Favorite
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Favorite"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /favorites/{favoriteId}:
    x-swagger-router-controller: favorite
    delete:
      operationId: removeFavorite
      summary: お気に入り削除
      description: |
        お気に入りを削除する。
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: favoriteId
          description: お気に入りID
          type: string
          in: path
          required: true
      tags:
        - Favorite
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Person:
    required:
      - personId
    properties:
      personId:
        type: integer
        format: int64
        description: 人物ID
      familyName:
        type: string
        description: 姓
      givenName: 
        type: string
        description: 名
      familyNameYomi:
        type: string
        description: 姓読み
      givenNameYomi: 
        type: string
        description: 名読み
      familyNameSort:
        type: string
        description: 姓読みソート用
      givenNameSort: 
        type: string
        description: 名読みソート用
      # _works:
      #   type: array
      #   items:
      #     $ref: "#/definitions/Work"
    x-swagger-mongoose:
      additional-properties:
        _works:
          type: array
          items:
            $ref: "#/definitions/Work"
  Work:
    required:
      - workId
    properties:
      workId:
        type: integer
        format: int64
        description: 作品ID
      title:
        type: string
        description: 作品名
      titleYomi:
        type: string
        description: 作品名読み
      titleSort:
        type: string
        description: ソート用読み
      copyright:
        type: boolean
        description: 作品著作権フラグ
      cardUrl:
        type: string
        description: 図書カードURL
      personId:
        type: integer
        format: int64
        description: 人物ID
      personRole:
        type: string
        description: 役割フラグ
      textUrl:
        type: string
        description: テキストファイルURL
      textEncoding:
        type: string
        description: テキストファイル符号化方式
      textCharset:
        type: string
        description: テキストファイル文字集合
      xmlUrl:
        type: string
        description: XHTML/HTMLファイルURL
      xmlEncoding:
        type: string
        description: XHTML/HTMLファイル符号化方式
      xmlCharset:
        type: string
        description: XHTML/HTMLファイル文字集合
      # _person:
      #   $ref: "#/definitions/Person"
    x-swagger-mongoose:
      additional-properties:
        _person:
          $ref: "#/definitions/Person"
  Favorite:
    required:
      - userId
      - workId
    properties:
      # TODO 本当は id を使いたいが、paginateの関係からか、使えない？
      favoriteId:
        type: string
        description: ID
      userId:
        type: string
        description: 利用ユーザID
      workId:
        type: integer
        format: int64
        description: 作品ID
    x-swagger-mongoose:
      additional-properties:
        _work:
          $ref: "#/definitions/Work"
  User:
    required:
      - userId
      - userName
      - screenName
      - role
      - password
    properties:
      userId:
        type: string
        description: 利用ユーザID
      userName:
        type: string
        description: ユーザ名
        x-swagger-mongoose:
          index:
            unique: true    
      screenName:
        type: string
        description: 表示名
      role:
        type: string
        enum: 
        - "user"
        - "admin"
        default: 'user'
        description: ユーザロール
      password:
        type: string
        description: ログインパスワード

  # https://scotch.io/tutorials/speed-up-your-restful-api-development-in-node-js-with-swagger
  GeneralResponse:
    required:
      - success
      - description
    properties:
      success:
        type: integer
        format: int32
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  # https://github.com/miguelduarte42/swagger-jwt-example/blob/master/api/swagger/swagger.yaml
  Authentication:
    type: object
    properties:
      userName:
        type: string
      password:
        type: string
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  AuthError:
    type: object
    properties:
      message:
        type: string

